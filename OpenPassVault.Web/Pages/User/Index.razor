@page "/user"

@inject NavigationManager NavigationManager
@inject ApiAuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService

@attribute [Authorize]

<PageTitle>Brugerinfo</PageTitle>


<div class="card">
    <h4 class="card-header">Opret</h4>
    <div class="card-body">
        <ErrorAlert ErrorMessage="@errorMessage" />
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
            <input @bind="model.Id" type="hidden" class="form-control"/>
            <div class="form-group mt-2">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control"/>
                <ValidationMessage For="@(() => model.Email)"/>
            </div>
            <div class="form-group mt-2">
                <label>Password</label>
                <InputText @bind-Value="model.NewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.NewPassword)"/>
            </div>
            <div class="form-group mt-2">
                <label>Bekræft password</label>
                <InputText @bind-Value="model.ConfirmNewPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.ConfirmNewPassword)"/>
            </div>
            <div class="form-group">
                <img src="@model.CaptchaImageSrc" alt="CAPTCHA" />                
            </div>
            <div class="form-group">
                <label>CAPTCHA</label>
                <InputText @bind-Value="model.CaptchaCode" type="text" class="form-control"/>
                <ValidationMessage For="@(() => model.CaptchaCode)"/>
                <input @bind="model.CaptchaHmac" type="hidden" class="form-control"/>
            </div>
            <div class="mt-4">
                <button disabled="@loading" type="submit" class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Opret
                </button>
                <NavLink href="@Urls.Login" class="btn btn-link">Har du allerede en konto? Log ind</NavLink>
            </div>
        </EditForm>
    </div>
</div>




@code {
    private bool loading;
    private string? errorMessage;
    private EditUserViewModel model = new();

    protected override async Task OnInitializedAsync()
    {
        model = await AuthService.CreateEditUserViewModel();
    }

    private async Task OnValidSubmit(EditContext context)
    {
        try
        {
            loading = true;
            await AuthService.UpdateUserInfo(model);
            NavigationManager.NavigateTo(Urls.Login);
        }
        catch (Exception)
        {
            errorMessage = "Opdatering af brugerinfo mislykkedes. Prøv igen senere.";
            StateHasChanged();
        }
        finally
        {
            loading = false;
        }
        
    }
    
}