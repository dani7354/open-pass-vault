@page "/register"
@using OpenPassVault.Web.Providers

@inject NavigationManager NavigationManager
@inject ApiAuthenticationStateProvider AuthenticationStateProvider
@inject IAuthService AuthService

<PageTitle>Opret bruger</PageTitle>

<div class="card">
    <h4 class="card-header">Opret</h4>
    <div class="card-body">
        <ErrorAlert ErrorMessage="@errorMessage" />
        <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator/>
            <div class="form-group mt-2">
                <label>Email</label>
                <InputText @bind-Value="model.Email" class="form-control"/>
                <ValidationMessage For="@(() => model.Email)"/>
            </div>
            <div class="form-group mt-2">
                <label>Password</label>
                <InputText @bind-Value="model.Password" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.Password)"/>
            </div>
            <div class="form-group mt-2">
                <label>Bekræft password</label>
                <InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.ConfirmPassword)"/>
            </div>
            <div class="form-group mt-2">
                <label>Master-password</label>
                <InputText @bind-Value="model.MasterPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.MasterPassword)"/>
            </div>
            <div class="form-group mt-2">
                <label>Bekræft master-password</label>
                <InputText @bind-Value="model.ConfirmMasterPassword" type="password" class="form-control"/>
                <ValidationMessage For="@(() => model.ConfirmMasterPassword)"/>
            </div>
            <div class="mt-4">
                <button disabled="@loading" type="submit" class="btn btn-primary">
                    @if (loading)
                    {
                        <span class="spinner-border spinner-border-sm mr-1"></span>
                    }
                    Opret
                </button>
                <NavLink href="@Urls.Login" class="btn btn-link">Har du allerede en konto? Log ind</NavLink>
            </div>
        </EditForm>
    </div>
</div>


@code {
    private RegisterViewModel model = new();
    private bool loading;
    private string? errorMessage;
    
    protected override void OnInitialized()
    {
        if (AuthenticationStateProvider.CurrentUser != null)
        {
            NavigationManager.NavigateTo(Urls.VaultIndex);
        }
    }

    private async Task OnValidSubmit(EditContext editContext)
    {
        try
        {
            loading = true;
            await AuthService.RegisterAsync(model);
            NavigationManager.NavigateTo(Urls.Login);
        }
        catch (Exception)
        {
            SetValidationMessageWhenErrorOccurs("Oprettelse mislykkedes. Prøv igen.");
        }
        finally
        {
            loading = false;
        }
    }
    
    private void SetValidationMessageWhenErrorOccurs(string errorMessageText)
    {
        errorMessage = errorMessageText;
        StateHasChanged();
    }
}