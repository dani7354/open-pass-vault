@inject Providers.ApiAuthenticationStateProvider AuthenticationStateProvider

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">OpenPassVault</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Hjem
            </NavLink>
        </div>
        <div class="nav-item px-3">
            @if (AuthenticationStateProvider.CurrentUser != null)
            {
                <NavLink class="nav-link" href="vault">
                    <span class="bi bi-list-nested-nav-menu" aria-hidden="false"></span> Passwords
                </NavLink>
            }
            else
            {
                <NavLink class="nav-link" href="login">
                    <span class="bi bi-person-fill-nested-nav-menu" aria-hidden="false"></span> Log ind
                </NavLink>
            }
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override Task OnInitializedAsync()
    {
        AuthenticationStateProvider.AuthenticationStateChanged += _ =>  StateHasChanged();
        return base.OnInitializedAsync();
    }
}
